// Autogenerated from Pigeon (v22.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, PGNMelodinkHostPlayerProcessingState) {
  /// There hasn't been any resource loaded yet.
  PGNMelodinkHostPlayerProcessingStateIdle = 0,
  /// Resource is being loaded.
  PGNMelodinkHostPlayerProcessingStateLoading = 1,
  /// Resource is being buffered.
  PGNMelodinkHostPlayerProcessingStateBuffering = 2,
  /// Resource is buffered enough and available for playback.
  PGNMelodinkHostPlayerProcessingStateReady = 3,
  /// The end of resource was reached.
  PGNMelodinkHostPlayerProcessingStateCompleted = 4,
};

/// Wrapper for PGNMelodinkHostPlayerProcessingState to allow for nullability.
@interface PGNMelodinkHostPlayerProcessingStateBox : NSObject
@property(nonatomic, assign) PGNMelodinkHostPlayerProcessingState value;
- (instancetype)initWithValue:(PGNMelodinkHostPlayerProcessingState)value;
@end

typedef NS_ENUM(NSUInteger, PGNMelodinkHostPlayerLoopMode) {
  /// The current media item or queue will not repeat.
  PGNMelodinkHostPlayerLoopModeNone = 0,
  /// The current media item will repeat.
  PGNMelodinkHostPlayerLoopModeOne = 1,
  /// Playback will continue looping through all media items in the current list.
  PGNMelodinkHostPlayerLoopModeAll = 2,
};

/// Wrapper for PGNMelodinkHostPlayerLoopMode to allow for nullability.
@interface PGNMelodinkHostPlayerLoopModeBox : NSObject
@property(nonatomic, assign) PGNMelodinkHostPlayerLoopMode value;
- (instancetype)initWithValue:(PGNMelodinkHostPlayerLoopMode)value;
@end

@class PGNPlayerStatus;

@interface PGNPlayerStatus : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPlaying:(BOOL )playing
    pos:(NSInteger )pos
    positionMs:(NSInteger )positionMs
    bufferedPositionMs:(NSInteger )bufferedPositionMs
    state:(PGNMelodinkHostPlayerProcessingState)state
    loop:(PGNMelodinkHostPlayerLoopMode)loop;
@property(nonatomic, assign) BOOL  playing;
@property(nonatomic, assign) NSInteger  pos;
@property(nonatomic, assign) NSInteger  positionMs;
@property(nonatomic, assign) NSInteger  bufferedPositionMs;
@property(nonatomic, assign) PGNMelodinkHostPlayerProcessingState state;
@property(nonatomic, assign) PGNMelodinkHostPlayerLoopMode loop;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *PGNGetMessagesCodec(void);

@protocol PGNMelodinkHostPlayerApi
- (void)playWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)pauseWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)seekPositionMs:(NSInteger)positionMs error:(FlutterError *_Nullable *_Nonnull)error;
- (void)skipToNextWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)skipToPreviousWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAudiosPreviousUrls:(NSArray<NSString *> *)previousUrls nextUrls:(NSArray<NSString *> *)nextUrls error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setLoopModeLoop:(PGNMelodinkHostPlayerLoopMode)loop error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable PGNPlayerStatus *)fetchStatusWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAuthTokenAuthToken:(NSString *)authToken error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpPGNMelodinkHostPlayerApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PGNMelodinkHostPlayerApi> *_Nullable api);

extern void SetUpPGNMelodinkHostPlayerApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PGNMelodinkHostPlayerApi> *_Nullable api, NSString *messageChannelSuffix);


@interface PGNMelodinkHostPlayerApiInfo : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
- (void)audioChangedPos:(NSInteger)pos completion:(void (^)(FlutterError *_Nullable))completion;
- (void)updateStateState:(PGNMelodinkHostPlayerProcessingState)state completion:(void (^)(FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
